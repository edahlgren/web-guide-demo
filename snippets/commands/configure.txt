                                                            type 'q' to exit
                                                            type '/' to search
                                                            Type down arrow to scroll

  configure

  Configure the demo


  Quick reference
  ===============

   View the configuration file

     $ cat /demo/demo.yml
     
   Check your changes to the configuration file

     $ demo configure --check
     

  Summary
  =======

   The 'demo' command-line tool uses a configuration file to execute commands like
   'demo run', 'demo build', and 'demo docs'. The 'demo configure' command prints
   information about this file so you can understand and change how the demo works.

   The 'demo configure <section>' command prints requirements of a section of the
   configuration file, along with an example and best practices.

   The 'demo configure --check' command checks that all requirements are met, while
   the 'demo configure <section> --check' checks a single section.

   When you change the configuration file, you should run 'demo configure --check'
   to make sure your changes meet the minimum requirements. If you forget to do
   this, it will happen automatically before another 'demo' command is executed.


  Configuration file
  ==================

   Format    YAML
   Location  /demo/demo.yml
   
   Sections

     args    Command-line arguments for configuring the demo
     build   How to build the demo
     data    Included data sets for experimenting
     io      Input and output of the demo (files)
     papers  Published papers that describe the demo
     run     How to execute the demo
     source  Source code of the demo
     title   Title of the demo
     

  More details
  ============

   Learn about a section and its requirements

     $ demo configure <section>
     
   For example

     $ demo configure run
     

  YAML
  ====

   YAML ("YAML Ain't Markup Language") is a simple, human-readable data format.
   Popular alternatives are JSON and TOML. Below is a brief guide that shows how
   YAML works by example and by comparison.

   [Fields and values]
   
     YAML                 JSON                     TOML
     ----                 ----                     ----
                          {
     pets: 1                "pets": 1,             pets = 1
     cat: true              "cat": true,           cat = true
     name: Fred Astair      "name": "Fred Astair"  name = "Fred Astair"
                          }                        
   
   [Structures]
   
     YAML                 JSON                     TOML
     ----                 ----                     ----
     pets:                "pets": {                [pets]
       cats: 1              "cats": 1,             cats = 1
       dogs: 2              "dogs": 2              dogs = 2
                          }                        
   
   [Arrays]
   
     YAML                 JSON                     TOML
     ----                 ----                     ----
     pets:                "pets": [                pets = [
       - cat                "cat",                   "cat",
       - dog                "dog"                    "dog",
                          ]                        ]
   
   [Strings]
   
     YAML                 JSON                     TOML
     ----                 ----                     ----
     field: string        "field": "string"        field = "string"
                                                    
     field: >-            N/A                      field = """\
       This is a long                                      This is a long\
       string formatted                                    string formatted\
       on multiple lines                                   on multiple lines\
       (no line break).                                    (no line break).\
                                                           """
   
   [Comments]
   
     YAML                 JSON                     TOML
     ----                 ----                     ----
     # This is a comment  N/A                      # This is a comment
                                                    
   
   [Notes]

     + In YAML, string don't always need to be enclosed in quotes ("cats"), but they
       must be if they contains special characters ("-", ":") that could be confused
       with YAML syntax (array elements, fields).


